{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Desktop/05forms/src/components/widgets/Forms/formFields.js\";\nimport React from \"react\";\n\nconst FormFields = props => {\n  const renderFields = () => {\n    const formArray = [];\n\n    for (let elementName in props.formData) {\n      formArray.push({\n        id: elementName,\n        settings: props.formData[elementName]\n      });\n    }\n\n    return formArray.map((item, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"form_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, renderTemplates(item));\n    });\n  };\n\n  const showLabel = (show, label) => {\n    return show ? React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, label) : null;\n  };\n\n  const renderTemplates = data => {\n    let formTemplate = \"\";\n    let values = data.settings;\n\n    switch (values.element) {\n      case \"input\":\n        formTemplate = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, showLabel(values.label, values.labelText), React.createElement(\"input\", Object.assign({}, values.config, {\n          value: values.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })));\n        break;\n\n      default:\n        formTemplate = null;\n    }\n\n    return formTemplate;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, renderFields());\n};\n\nexport default FormFields;","map":{"version":3,"sources":["/home/benjamin/Desktop/05forms/src/components/widgets/Forms/formFields.js"],"names":["React","FormFields","props","renderFields","formArray","elementName","formData","push","id","settings","map","item","i","renderTemplates","showLabel","show","label","data","formTemplate","values","element","labelText","config","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,IAAIC,WAAT,IAAwBH,KAAK,CAACI,QAA9B,EAAwC;AACtCF,MAAAA,SAAS,CAACG,IAAV,CAAe;AACbC,QAAAA,EAAE,EAAEH,WADS;AAEbI,QAAAA,QAAQ,EAAEP,KAAK,CAACI,QAAN,CAAeD,WAAf;AAFG,OAAf;AAID;;AACD,WAAOD,SAAS,CAACM,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AAChC,aACE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,eAAe,CAACF,IAAD,CADlB,CADF;AAKD,KANM,CAAP;AAOD,GAhBD;;AAkBA,QAAMG,SAAS,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,WAAOD,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQC,KAAR,CAAH,GAA4B,IAAvC;AACD,GAFD;;AAGA,QAAMH,eAAe,GAAGI,IAAI,IAAI;AAC9B,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,MAAM,GAAGF,IAAI,CAACR,QAAlB;;AAEA,YAAQU,MAAM,CAACC,OAAf;AACE,WAAK,OAAL;AACEF,QAAAA,YAAY,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGJ,SAAS,CAACK,MAAM,CAACH,KAAR,EAAeG,MAAM,CAACE,SAAtB,CADZ,EAEE,+CAAWF,MAAM,CAACG,MAAlB;AAA0B,UAAA,KAAK,EAAEH,MAAM,CAACI,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF;AAOA;;AACF;AACEL,QAAAA,YAAY,GAAG,IAAf;AAXJ;;AAaA,WAAOA,YAAP;AACD,GAlBD;;AAoBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMf,YAAY,EAAlB,CAAP;AACD,CA3CD;;AA6CA,eAAeF,UAAf","sourcesContent":["import React from \"react\";\n\nconst FormFields = props => {\n  const renderFields = () => {\n    const formArray = [];\n\n    for (let elementName in props.formData) {\n      formArray.push({\n        id: elementName,\n        settings: props.formData[elementName]\n      });\n    }\n    return formArray.map((item, i) => {\n      return (\n        <div key={i} className=\"form_element\">\n          {renderTemplates(item)}\n        </div>\n      );\n    });\n  };\n\n  const showLabel = (show, label) => {\n    return show ? <label>{label}</label> : null;\n  };\n  const renderTemplates = data => {\n    let formTemplate = \"\";\n    let values = data.settings;\n\n    switch (values.element) {\n      case \"input\":\n        formTemplate = (\n          <div>\n            {showLabel(values.label, values.labelText)}\n            <input {...values.config} value={values.value} />\n          </div>\n        );\n\n        break;\n      default:\n        formTemplate = null;\n    }\n    return formTemplate;\n  };\n\n  return <div>{renderFields()}</div>;\n};\n\nexport default FormFields;\n"]},"metadata":{},"sourceType":"module"}