{"ast":null,"code":"var _jsxFileName = \"/home/amel/Documents/wmtProject/wmt/src/_components/DomainInfo.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\"; //import format from \"date-fns/format\";\n\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Form from \"../_components/common/form\";\nimport \"../css/datePicker.css\";\n\nclass DomainInfoForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        siteName: \"\",\n        siteRegistredFromDate: new Date(),\n        endOfActivityDate: new Date(),\n        domainOwner: \"\",\n        personForPayment: \"\",\n        personForAdministration: \"\"\n      },\n      errors: {}\n    };\n\n    this.handleDatePickerChange = (dateName, dateValue) => {\n      let _this$state$data = this.state.data,\n          siteRegistredFromDate = _this$state$data.siteRegistredFromDate,\n          endOfActivityDate = _this$state$data.endOfActivityDate;\n\n      if (dateName === \"siteRegistredFromDate\") {\n        siteRegistredFromDate = dateValue;\n      } else {\n        endOfActivityDate = dateValue;\n      }\n\n      this.setState({\n        data: {\n          siteRegistredFromDate,\n          endOfActivityDate\n        }\n      });\n    };\n\n    this.schema = {\n      siteName: Joi.string().required().label(\"siteName\"),\n      domainOwner: Joi.string().required().label(\"domainOwner\"),\n      personForPayment: Joi.string().required().label(\"personForPayment\"),\n      personForAdministration: Joi.string().required().label(\"personForAdministration\")\n    };\n\n    this.doOnSubmit = () => {\n      // call server\n      console.log(\"submitted\");\n    };\n\n    this.handleDateChangeRaw = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"statusTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Domain info\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.renderInput(\"siteName\", \"text\", \"siteName\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Site registred from date\"), React.createElement(DatePicker, {\n      id: \"siteRegistredFromDate\",\n      name: \"siteRegistredFromDate\",\n      className: \"form-control\",\n      onChange: date => this.handleDatePickerChange(\"siteRegistredFromDate\", date),\n      onChangeRaw: this.handleDateChangeRaw,\n      selected: this.state.data.siteRegistredFromDate,\n      value: this.state.data.siteRegistredFromDate,\n      dateFormat: \"dd.MM.yyyy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"End of activity date\"), React.createElement(DatePicker, {\n      id: \"endOfActivityDate\",\n      name: \"endOfActivityDate\",\n      className: \"form-control\",\n      onChange: date => this.handleDatePickerChange(\"endOfActivityDate\", date),\n      selected: this.state.data.endOfActivityDate,\n      value: this.state.data.endOfActivityDate,\n      dateFormat: \"dd.MM.yyyy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), this.renderInput(\"domainOwner\", \"text\", \"domain Owner\"), this.renderInput(\"personForPayment\", \"text\", \"personForPayment\"), this.renderInput(\"personForAdministration\", \"text\", \"personForAdministration\"), this.randerButton(\"Save\")));\n  }\n\n}\n\nexport default DomainInfoForm;","map":{"version":3,"sources":["/home/amel/Documents/wmtProject/wmt/src/_components/DomainInfo.jsx"],"names":["React","Component","Joi","DatePicker","moment","Form","DomainInfoForm","state","data","siteName","siteRegistredFromDate","Date","endOfActivityDate","domainOwner","personForPayment","personForAdministration","errors","handleDatePickerChange","dateName","dateValue","setState","schema","string","required","label","doOnSubmit","console","log","handleDateChangeRaw","e","preventDefault","render","handleSubmit","renderInput","date","randerButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\n\n//import format from \"date-fns/format\";\n\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Form from \"../_components/common/form\";\n\nimport \"../css/datePicker.css\";\n\nclass DomainInfoForm extends Form {\n  state = {\n    data: {\n      siteName: \"\",\n      siteRegistredFromDate: new Date(),\n      endOfActivityDate: new Date(),\n      domainOwner: \"\",\n      personForPayment: \"\",\n      personForAdministration: \"\"\n    },\n    errors: {}\n  };\n  handleDatePickerChange = (dateName, dateValue) => {\n    let { siteRegistredFromDate, endOfActivityDate } = this.state.data;\n    if (dateName === \"siteRegistredFromDate\") {\n      siteRegistredFromDate = dateValue;\n    } else {\n      endOfActivityDate = dateValue;\n    }\n    this.setState({\n      data: {\n        siteRegistredFromDate,\n        endOfActivityDate\n      }\n    });\n  };\n\n  schema = {\n    siteName: Joi.string()\n      .required()\n      .label(\"siteName\"),\n\n    domainOwner: Joi.string()\n      .required()\n      .label(\"domainOwner\"),\n\n    personForPayment: Joi.string()\n      .required()\n      .label(\"personForPayment\"),\n\n    personForAdministration: Joi.string()\n      .required()\n      .label(\"personForAdministration\")\n  };\n  doOnSubmit = () => {\n    // call server\n    console.log(\"submitted\");\n  };\n\n  handleDateChangeRaw = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"statusTitle\">Domain info</h2>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"siteName\", \"text\", \"siteName\")}\n          <label>Site registred from date</label>\n          <DatePicker\n            id=\"siteRegistredFromDate\"\n            name=\"siteRegistredFromDate\"\n            className=\"form-control\"\n            onChange={date =>\n              this.handleDatePickerChange(\"siteRegistredFromDate\", date)\n            }\n            onChangeRaw={this.handleDateChangeRaw}\n            selected={this.state.data.siteRegistredFromDate}\n            value={this.state.data.siteRegistredFromDate}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n          <label>End of activity date</label>\n          <DatePicker\n            id=\"endOfActivityDate\"\n            name=\"endOfActivityDate\"\n            className=\"form-control\"\n            onChange={date =>\n              this.handleDatePickerChange(\"endOfActivityDate\", date)\n            }\n            selected={this.state.data.endOfActivityDate}\n            value={this.state.data.endOfActivityDate}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n\n          {this.renderInput(\"domainOwner\", \"text\", \"domain Owner\")}\n          {this.renderInput(\"personForPayment\", \"text\", \"personForPayment\")}\n          {this.renderInput(\n            \"personForAdministration\",\n            \"text\",\n            \"personForAdministration\"\n          )}\n          {this.randerButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default DomainInfoForm;\n"]},"metadata":{},"sourceType":"module"}