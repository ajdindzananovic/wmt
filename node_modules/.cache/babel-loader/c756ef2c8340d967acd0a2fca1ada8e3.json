{"ast":null,"code":"var _jsxFileName = \"/home/amel/Documents/wmtProject/wmt/src/_components/DomainInfo.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\"; //import format from \"date-fns/format\";\n\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Form from \"../_components/common/form\";\nimport \"../css/datePicker.css\";\n\nclass DomainInfo extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      siteRegistredFromDate: new Date(),\n      endOfActivityDate: new Date(),\n      data: {\n        siteName: \"1\",\n        domainOwner: \"2\",\n        personForPayment: \"3\",\n        personForAdministration: \"4\"\n      },\n      errors: {}\n    };\n\n    this.handleDatePickerChange = (dateName, dateValue) => {\n      let _this$state = this.state,\n          siteRegistredFromDate = _this$state.siteRegistredFromDate,\n          endOfActivityDate = _this$state.endOfActivityDate;\n\n      if (dateName === \"siteRegistredFromDate\") {\n        siteRegistredFromDate = dateValue;\n      } else {\n        endOfActivityDate = dateValue;\n      }\n\n      this.setState({\n        siteRegistredFromDate,\n        endOfActivityDate\n      });\n    };\n\n    this.schema = {\n      siteName: Joi.string().required().label(\"siteName\"),\n      domainOwner: Joi.string().required().label(\"domainOwner\"),\n      personForPayment: Joi.string().required().label(\"personForPayment\"),\n      personForAdministration: Joi.string().required().label(\"personForAdministration\")\n    };\n\n    this.doOnSubmit = () => {\n      console.log(document.getElementById(\"siteRegistredFromDate\")); // call server\n\n      console.log(\"submitted\");\n    };\n\n    this.handleDateChangeRaw = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"statusTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Domain info\"), React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.renderInput(\"siteName\", \"text\", \"siteName\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Site registred from date\"), React.createElement(DatePicker, {\n      id: \"siteRegistredFromDate\",\n      name: \"siteRegistredFromDate\",\n      className: \"form-control\",\n      onChange: date => this.handleDatePickerChange(\"siteRegistredFromDate\", date),\n      onChangeRaw: this.handleDateChangeRaw,\n      selected: this.state.siteRegistredFromDate,\n      value: this.state.siteRegistredFromDate,\n      dateFormat: \"dd.MM.yyyy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"End of activity date\"), React.createElement(DatePicker, {\n      id: \"endOfActivityDate\",\n      name: \"endOfActivityDate\",\n      className: \"form-control\",\n      onChange: date => this.handleDatePickerChange(\"endOfActivityDate\", date),\n      onChangeRaw: this.handleDateChangeRaw,\n      selected: this.state.endOfActivityDate,\n      value: this.state.endOfActivityDate,\n      dateFormat: \"dd.MM.yyyy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.renderInput(\"domainOwner\", \"text\", \"domain Owner\"), this.renderInput(\"personForPayment\", \"text\", \"personForPayment\"), this.renderInput(\"personForAdministration\", \"text\", \"personForAdministration\"), this.randerButton(\"Save\")));\n  }\n\n}\n\nexport default DomainInfo;","map":{"version":3,"sources":["/home/amel/Documents/wmtProject/wmt/src/_components/DomainInfo.jsx"],"names":["React","Component","Joi","DatePicker","moment","Form","DomainInfo","state","siteRegistredFromDate","Date","endOfActivityDate","data","siteName","domainOwner","personForPayment","personForAdministration","errors","handleDatePickerChange","dateName","dateValue","setState","schema","string","required","label","doOnSubmit","console","log","document","getElementById","handleDateChangeRaw","e","preventDefault","render","handleSubmit","renderInput","date","randerButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\n\n//import format from \"date-fns/format\";\n\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Form from \"../_components/common/form\";\n\nimport \"../css/datePicker.css\";\n\nclass DomainInfo extends Form {\n  state = {\n    siteRegistredFromDate: new Date(),\n    endOfActivityDate: new Date(),\n\n    data: {\n      siteName: \"1\",\n\n      domainOwner: \"2\",\n      personForPayment: \"3\",\n      personForAdministration: \"4\"\n    },\n    errors: {}\n  };\n  handleDatePickerChange = (dateName, dateValue) => {\n    let { siteRegistredFromDate, endOfActivityDate } = this.state;\n    if (dateName === \"siteRegistredFromDate\") {\n      siteRegistredFromDate = dateValue;\n    } else {\n      endOfActivityDate = dateValue;\n    }\n    this.setState({\n      siteRegistredFromDate,\n      endOfActivityDate\n    });\n  };\n\n  schema = {\n    siteName: Joi.string()\n      .required()\n      .label(\"siteName\"),\n\n    domainOwner: Joi.string()\n      .required()\n      .label(\"domainOwner\"),\n\n    personForPayment: Joi.string()\n      .required()\n      .label(\"personForPayment\"),\n\n    personForAdministration: Joi.string()\n      .required()\n      .label(\"personForAdministration\")\n  };\n  doOnSubmit = () => {\n    console.log(document.getElementById(\"siteRegistredFromDate\"));\n    // call server\n    console.log(\"submitted\");\n  };\n\n  handleDateChangeRaw = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"statusTitle\">Domain info</h2>\n        <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n          {this.renderInput(\"siteName\", \"text\", \"siteName\")}\n          <label>Site registred from date</label>\n          <DatePicker\n            id=\"siteRegistredFromDate\"\n            name=\"siteRegistredFromDate\"\n            className=\"form-control\"\n            onChange={date =>\n              this.handleDatePickerChange(\"siteRegistredFromDate\", date)\n            }\n            onChangeRaw={this.handleDateChangeRaw}\n            selected={this.state.siteRegistredFromDate}\n            value={this.state.siteRegistredFromDate}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n          <label>End of activity date</label>\n          <DatePicker\n            id=\"endOfActivityDate\"\n            name=\"endOfActivityDate\"\n            className=\"form-control\"\n            onChange={date =>\n              this.handleDatePickerChange(\"endOfActivityDate\", date)\n            }\n            onChangeRaw={this.handleDateChangeRaw}\n            selected={this.state.endOfActivityDate}\n            value={this.state.endOfActivityDate}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n\n          {this.renderInput(\"domainOwner\", \"text\", \"domain Owner\")}\n          {this.renderInput(\"personForPayment\", \"text\", \"personForPayment\")}\n          {this.renderInput(\n            \"personForAdministration\",\n            \"text\",\n            \"personForAdministration\"\n          )}\n          {this.randerButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default DomainInfo;\n"]},"metadata":{},"sourceType":"module"}