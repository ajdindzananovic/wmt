{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Documents/react-project/react-project/src/_components/Signup.jsx\";\nimport React, { Component } from \"react\";\nimport { FormGroup, FormControl, Form, Button } from \"react-bootstrap\";\nimport LoaderButton from \"./LoaderButton\";\nimport \"./css/Signup.css\";\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        newUser: \"test\"\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleConfirmationSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  renderForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Email\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(FormControl, {\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disable: !this.validateForm(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Sign Up\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.newUser === null ? this.renderForm() : React.createElement(LoaderButton, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      text: \"Signup\",\n      loadingText: \"Signing up\\u2026\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/benjamin/Documents/react-project/react-project/src/_components/Signup.jsx"],"names":["React","Component","FormGroup","FormControl","Form","Button","LoaderButton","Signup","constructor","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","isLoading","newUser","handleConfirmationSubmit","state","email","password","confirmPassword","confirmationCode","validateForm","length","validateConfirmationForm","renderForm","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FormGroup, FormControl, Form, Button } from \"react-bootstrap\";\nimport LoaderButton from \"./LoaderButton\";\nimport \"./css/Signup.css\";\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return (\n      this.state.email.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n\n    this.setState({ newUser: \"test\" });\n\n    this.setState({ isLoading: false });\n  };\n\n  handleConfirmationSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n  };\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <Form.Label>Email</Form.Label>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <Form.Label>Password</Form.Label>\n          <FormControl\n            value={this.state.password}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <Form.Label>Confirm Password</Form.Label>\n          <FormControl\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button\n          block\n          bsSize=\"large\"\n          disable={!this.validateForm()}\n          type=\"submit\"\n        >\n          Sign Up\n        </Button>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Signup\">\n        {this.state.newUser === null ? (\n          this.renderForm()\n        ) : (\n          <LoaderButton\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n            isLoading={this.state.isLoading}\n            text=\"Signup\"\n            loadingText=\"Signing up…\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}