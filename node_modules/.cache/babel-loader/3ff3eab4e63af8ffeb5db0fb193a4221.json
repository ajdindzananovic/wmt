{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Desktop/React Project/wmt/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./_components/_navBar/Header\";\nimport Body from \"./_components/_navBar/Body\";\nimport Footer from \"./_components/_navBar/Footer\";\nimport LoginForm from \"./_components/_forms/loginForm\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onClickHandler = linkName => {\n      this.state.route.map(route => {\n        if (route.path === linkName) {\n          this.setState({\n            isClicked: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      route: {\n        webSite: {\n          isClicked: false,\n          path: \"/webSite\",\n          component: WebSite,\n          navBar: {\n            webSiteInfo: \"Web Site Info\",\n            credentials: \"Credentials\"\n          }\n        },\n        tasks: {\n          isClicked: false,\n          path: \"/task\",\n          component: WebSiteTasks\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onClickHandler: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Body, {\n      routeState: this.state.route,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/benjamin/Desktop/React Project/wmt/src/App.js"],"names":["React","Component","Header","Body","Footer","LoginForm","App","constructor","onClickHandler","linkName","state","route","map","path","setState","isClicked","webSite","component","WebSite","navBar","webSiteInfo","credentials","tasks","WebSiteTasks","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAG;AACZ;;AADY,SAsBdC,cAtBc,GAsBGC,QAAQ,IAAI;AAC3B,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBD,KAAK,IAAI;AAC5B,YAAIA,KAAK,CAACE,IAAN,KAAeJ,QAAnB,EAA6B;AAC3B,eAAKK,QAAL,CAAc;AACZC,YAAAA,SAAS,EAAE;AADC,WAAd;AAGD;AACF,OAND;AAOD,KA9Ba;;AAEZ,SAAKL,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AACLK,QAAAA,OAAO,EAAE;AACPD,UAAAA,SAAS,EAAE,KADJ;AAEPF,UAAAA,IAAI,EAAE,UAFC;AAGPI,UAAAA,SAAS,EAAEC,OAHJ;AAIPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,WAAW,EAAG,eADR;AAENC,YAAAA,WAAW,EAAE;AAFP;AAJD,SADJ;AAULC,QAAAA,KAAK,EAAE;AACLP,UAAAA,SAAS,EAAE,KADN;AAELF,UAAAA,IAAI,EAAE,OAFD;AAGLI,UAAAA,SAAS,EAAEM;AAHN;AAVF;AADI,KAAb;AAkBD;;AAYDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKhB,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKE,KAAL,CAAWC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAzCyB;;AA2C5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./_components/_navBar/Header\";\nimport Body from \"./_components/_navBar/Body\";\nimport Footer from \"./_components/_navBar/Footer\";\nimport LoginForm from \"./_components/_forms/loginForm\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      route: {\n        webSite: {\n          isClicked: false,\n          path: \"/webSite\",\n          component: WebSite,\n          navBar: {\n            webSiteInfo : \"Web Site Info\",\n            credentials: \"Credentials\"\n          }\n        },\n        tasks: {\n          isClicked: false,\n          path: \"/task\",\n          component: WebSiteTasks\n        }\n      }\n    };\n  }\n\n  onClickHandler = linkName => {\n    this.state.route.map(route => {\n      if (route.path === linkName) {\n        this.setState({\n          isClicked: true\n        });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header onClickHandler={this.onClickHandler} />\n        <Body routeState={this.state.route} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}