{"ast":null,"code":"import _defineProperty from \"/home/amel/Documents/wmtProject/wmt/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/amel/Documents/wmtProject/wmt/src/_components/common/form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Input from \"../common/input\";\nimport Joi from \"joi-browser\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const data = _objectSpread({}, this.state.data);\n\n      data[input.name] = input.value; //property validation on change\n\n      const errors = _objectSpread({}, this.state.errors);\n\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      this.setState({\n        data,\n        errors\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // form validation on submit\n\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doOnSubmit();\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n\n      const _Joi$validate = Joi.validate(this.state.data, this.schema, options),\n            error = _Joi$validate.error;\n\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n\n      const _Joi$validate2 = Joi.validate(obj, schema),\n            error = _Joi$validate2.error;\n\n      return error ? error.details[0].message : null;\n    };\n  }\n\n  randerButton(label) {\n    return React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, label);\n  }\n\n  renderInput(name, type, label) {\n    const _this$state = this.state,\n          data = _this$state.data,\n          errors = _this$state.errors;\n    return React.createElement(Input, {\n      onChange: this.handleChange,\n      value: data[name],\n      name: name,\n      type: type,\n      label: label,\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/amel/Documents/wmtProject/wmt/src/_components/common/form.jsx"],"names":["React","Component","Input","Joi","Form","handleChange","currentTarget","input","data","state","name","value","errors","errorMessage","validateProperty","setState","handleSubmit","e","preventDefault","validate","doOnSubmit","options","abortEarly","schema","error","item","details","path","message","obj","randerButton","label","renderInput","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"../common/input\";\nimport Joi from \"joi-browser\";\nclass Form extends Component {\n  /* \n  \n    Function description:\n\n   * handleChange - take value from input,field validation on change and update state.\n\n   * handleSubmit - what happens when we click submit.In the form that extends \n     this form it is necessary to implement the doOnSubmit function \n     and define what will happen when submitting.\n     For example, call server and insert data.\n     We also do form validation.\n    \n   * randerButton - render button dynamic.\n   * renderInput  - render input field dynamic. You need to send this function:\n                                  *name of input field \n                                  *type of input field\n                                  *label of input field\n   * validation - do form validation.\n   * validationProperty - do field validation on change.\n   \n    */\n\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    //property validation on change\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    this.setState({ data, errors });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // form validation on submit\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doOnSubmit();\n  };\n\n  randerButton(label) {\n    return (\n      <button type=\"submit\" className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n  renderInput(name, type, label) {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        onChange={this.handleChange}\n        value={data[name]}\n        name={name}\n        type={type}\n        label={label}\n        error={errors[name]}\n      />\n    );\n  }\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}